[{"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/index.js":"1","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/App.js":"2","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/auth/auth0-provider-with-history.js":"3","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Main/MainPage.js":"4","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Routes/Routes.js":"5","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/EmployeeObject.js":"6","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/TimeTables/TimeTables.js":"7","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/RoutesEditor.js":"8","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Employees/Employees.js":"9","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/StopsEditor.js":"10","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/EmployeesEditor.js":"11","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditRoute.js":"12","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditStop.js":"13","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditEmployee.js":"14","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/Editor.js":"15","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/AddElement/AddRoute.js":"16","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/AddElement/AddStop.js":"17","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/AddElement/AddEmployee.js":"18","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/API.js":"19","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/RouteObject.js":"20","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/nav-bar.js":"21","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/index.js":"22","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/loading.js":"23","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/additional-components/Checkbox.js":"24","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/additional-components/TimeTableForm.js":"25","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/TimeTableObject.js":"26","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/main-nav.js":"27","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/auth-nav.js":"28","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/email.js":"29","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/home-content.js":"30","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/footer.js":"31","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/hero.js":"32","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/authentication-button.js":"33","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/login-button.js":"34","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/logout-button.js":"35"},{"size":403,"mtime":1617552217000,"results":"36","hashOfConfig":"37"},{"size":2851,"mtime":1617552217000,"results":"38","hashOfConfig":"37"},{"size":750,"mtime":1617552217000,"results":"39","hashOfConfig":"37"},{"size":2960,"mtime":1617552217000,"results":"40","hashOfConfig":"37"},{"size":4667,"mtime":1617552217000,"results":"41","hashOfConfig":"37"},{"size":3773,"mtime":1617552217000,"results":"42","hashOfConfig":"37"},{"size":969,"mtime":1617552217000,"results":"43","hashOfConfig":"37"},{"size":5982,"mtime":1617552217000,"results":"44","hashOfConfig":"37"},{"size":2297,"mtime":1617552217000,"results":"45","hashOfConfig":"37"},{"size":3590,"mtime":1617552217000,"results":"46","hashOfConfig":"37"},{"size":4555,"mtime":1617552217000,"results":"47","hashOfConfig":"37"},{"size":11917,"mtime":1617552217000,"results":"48","hashOfConfig":"37"},{"size":7545,"mtime":1617552217000,"results":"49","hashOfConfig":"37"},{"size":6648,"mtime":1617552217000,"results":"50","hashOfConfig":"37"},{"size":2051,"mtime":1617552217000,"results":"51","hashOfConfig":"37"},{"size":9017,"mtime":1617552217000,"results":"52","hashOfConfig":"37"},{"size":4605,"mtime":1617552217000,"results":"53","hashOfConfig":"37"},{"size":4575,"mtime":1617552217000,"results":"54","hashOfConfig":"37"},{"size":5204,"mtime":1617552217000,"results":"55","hashOfConfig":"37"},{"size":1132,"mtime":1617552217000,"results":"56","hashOfConfig":"37"},{"size":1435,"mtime":1617552217000,"results":"57","hashOfConfig":"37"},{"size":221,"mtime":1617552217000,"results":"58","hashOfConfig":"37"},{"size":252,"mtime":1617552217000,"results":"59","hashOfConfig":"37"},{"size":1071,"mtime":1617552217000,"results":"60","hashOfConfig":"37"},{"size":1115,"mtime":1617552217000,"results":"61","hashOfConfig":"37"},{"size":5604,"mtime":1617552217000,"results":"62","hashOfConfig":"37"},{"size":389,"mtime":1617552217000,"results":"63","hashOfConfig":"37"},{"size":370,"mtime":1617552217000,"results":"64","hashOfConfig":"37"},{"size":290,"mtime":1617552217000,"results":"65","hashOfConfig":"37"},{"size":2789,"mtime":1617552217000,"results":"66","hashOfConfig":"37"},{"size":324,"mtime":1617552217000,"results":"67","hashOfConfig":"37"},{"size":626,"mtime":1617552217000,"results":"68","hashOfConfig":"37"},{"size":395,"mtime":1617552217000,"results":"69","hashOfConfig":"37"},{"size":365,"mtime":1617552217000,"results":"70","hashOfConfig":"37"},{"size":452,"mtime":1617552217000,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ydxeb",{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/index.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/App.js",["157","158","159","160","161","162"],"import React, { Component } from \"react\";\n//Import all needed Component for this tutorial\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Link,\n    Redirect\n} from \"react-router-dom\";\n\n//Pages\nimport {MainPage} from \"./pages/Main/MainPage.js\";\nimport Routes from \"./pages/Routes/Routes.js\";\nimport {GeneralTimeTables} from \"./pages/TimeTables/TimeTables\";\nimport {GeneralEmployees} from \"./pages/Employees/Employees\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { NavBar, Footer, Loading } from \"./components\";\nimport RoutesEditor from \"./pages/Editor/RoutesEditor\";\nimport StopsEditor from \"./pages/Editor/StopsEditor\";\nimport EmployeesEditor from \"./pages/Editor/EmployeesEditor\";\nimport {EditRoute} from \"./pages/EditElement/EditRoute\"\nimport {EditStop} from \"./pages/EditElement/EditStop\"\nimport {Editor} from \"./pages/Editor/Editor\"\nimport {AddRoute} from \"./pages/AddElement/AddRoute\";\nimport {AddStop} from \"./pages/AddElement/AddStop\";\nimport {AddEmployee} from \"./pages/AddElement/AddEmployee\";\nimport {EmployeeObject} from \"./models/EmployeeObject\";\nimport {EditEmployee} from \"./pages/EditElement/EditEmployee\";\n\nimport styles from \"./styles/General.module.css\";\n\nconst App = () => {\n    const { isLoading } = useAuth0();\n\n    if (isLoading) {\n        return <Loading />;\n    }\n\n    return (\n        <div id=\"app\" className={styles.MainApp}>\n                <Switch>\n                    <Route exact path=\"/\" component={MainPage} />\n                    <Route exact path=\"/routes\" component={Routes} />\n                    <Route path=\"/timetables\" component={GeneralTimeTables} />\n                    <Route path=\"/employees\" component={GeneralEmployees} />\n                    <Route path=\"/employee\" component={EmployeeObject} />\n                    <Route exact path=\"/editor\" component={Editor} />\n                    <Route exact path=\"/edit/routes\" component={RoutesEditor} />\n                    <Route exact path=\"/edit/stops\" component={StopsEditor} />\n                    <Route exact path=\"/edit/employees\" component={EmployeesEditor} />\n                    <Route path=\"/edit/route\" component={EditRoute}/>\n                    <Route path=\"/edit/stop\" component={EditStop}/>\n                    <Route path=\"/edit/employee\" component={EditEmployee}/>\n                    <Route path=\"/add/route\" component={AddRoute}/>\n                    <Route path=\"/add/stop\" component={AddStop}/>\n                    <Route path=\"/add/employee\" component={AddEmployee}/>\n                </Switch>\n        </div>\n    );\n};\n\nexport default App;\n\n///< index.jsx will be automatically imported\n//And render that route with the MainPage component for the root path /\n/*\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n\n            </Router>\n        );\n    }\n}\n\nexport default App;*/","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/auth/auth0-provider-with-history.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Main/MainPage.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Routes/Routes.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/EmployeeObject.js",["163","164","165"],"import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport * as API from \"../API\";\nimport { withRouter } from 'react-router-dom';\nimport TimeTableForm from \"../components/additional-components/TimeTableForm\";\nimport NavBar from \"../components/nav-bar\";\nimport Loading from \"../components/loading\";\nimport styles from \"../styles/General.module.css\"\n\n\n\nexport class EmployeeObject extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            counted: false\n        }\n    }\n\n\n    getRouteId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    componentDidMount = () => {\n        let number = this.getRouteId(window.location.href)\n        console.log(\"Employee number \" + number)\n        this.GetEmployee(number).then((employees) => {\n            if(employees.length === 0){\n                this.setState({\n                    incorrectRoute: true,\n                    counted: true\n                })\n            } else {\n                let routeId = employees[0][\"route_number\"]\n                console.log(\"Route number \" + routeId)\n                this.GetRoute(routeId).then((route) => {\n                    console.log(route)\n                    if(route === undefined){\n                        this.setState({\n                            incorrectRoute: true,\n                            counted: true\n                        })\n                    } else {\n                        this.setState({\n                            id: employees[0][\"id\"],\n                            name: employees[0][\"name\"],\n                            surname: employees[0][\"surname\"],\n                            routeId: employees[0][\"route_id\"],\n                            routeType : this.GetType(route[\"type\"]),\n                            routeNumber : route[\"routeId\"],\n                            counted : true\n                        }, function () {\n                            console.log(\"ST: \" + this.state.startTime)\n                        })\n                    }\n                })\n\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n    }\n\n    GetType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n\n    async GetEmployee(number) {\n        return await API.getEmployee(number)\n    }\n\n    async GetRoute(id){\n\n        let routes = await API.getRoutes()\n        console.log(\"All the routes: \" + routes)\n        let n = routes.length\n        for(let i = 0; i < n; i++){\n            console.log(\"X: \" + routes[i][\"routeId\"])\n            if(routes[i][\"routeId\"] === id){\n                return routes[i]\n            }\n        }\n        return undefined\n    }\n\n    render(){\n\n        if(this.state === undefined || this.state.counted === false){\n            return <Loading/>\n        }\n\n        if(this.state.incorrectRoute){\n            return (\n                <div>\n                    <h1>Працівника не знайдено.</h1>\n                </div>\n            )\n        }\n\n\n        return (\n            <div>\n                <NavBar fatherlink={'/employees'}/>\n                <div className={styles.MainBodyContainer}>\n                    <p>Ім'я:  {this.state.name}</p>\n                    <p>Прізвище:  {this.state.surname}</p>\n                    <p>Транспорт: {this.state.routeType} номер {this.state.routeNumber}</p>\n                </div>\n\n            </div>\n        )\n\n\n    }\n\n\n}","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/TimeTables/TimeTables.js",["166","167"],"import React from \"react\";\n//import * as API from  \"API.js\"\n/* We simply can use an array and loop and print each user */\nimport {TimeTableObject} from \"../../models/TimeTableObject\";\nimport {Redirect} from 'react-router-dom'\nimport NavBar from \"../../components/nav-bar\";\nimport styles from \"../../styles/General.module.css\"\n\nexport class GeneralTimeTables extends React.Component{\n    constructor(props) {\n        super(props);\n        let id = this.getRouteId(window.location.href)\n        this.state = {\n            routeId : id\n        }\n    }\n\n    getRouteId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    render() {\n        console.log(this.state)\n        console.log(this.state.routeId)\n        return (\n            <div >\n                <NavBar fatherlink={'/'}/>\n                <TimeTableObject routeId = {this.state.routeId}/>\n            </div>\n\n\n        );\n    }\n}\n","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/RoutesEditor.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Employees/Employees.js",["168","169","170"],"import React from \"react\";\n//import * as API from  \"API.js\"\n/* We simply can use an array and loop and print each user */\nimport {TimeTableObject} from \"../../models/TimeTableObject\";\nimport {Link, Redirect} from 'react-router-dom'\nimport NavBar from \"../../components/nav-bar\";\nimport * as API from \"../../API\";\nimport general from \"../../styles/General.module.css\"\nimport styles from \"../../styles/Routes.module.css\"\nimport smallList from \"../../styles/SmallList.module.css\"\n\nexport class GeneralEmployees extends React.Component{\n\n    constructor(props) {\n        super(props);\n        let id = this.getEmployeeId(window.location.href)\n        this.state = {\n            employeeId : id\n        }\n    }\n\n    componentDidMount = () => {\n        this.GetEmployees().then((employees) => {\n            this.setState({\n                employees : employees,\n                counted: true\n            })\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetEmployees() {\n        return await API.getEmployees()\n    }\n\n    getEmployeeId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    makeEmployeesList(){\n        return (<ul className={general.listOfCards}>\n            {\n                this.state.employees.map((employee) => <Link to={\"/employee?id=\" + employee[\"id\"]}><li key={employee[\"id\"]} className={general.listElement}>\n            <div className={general.listCard}><div className={smallList.smallP}>{employee[\"name\"]} {employee[\"surname\"]}</div></div></li></Link>)}</ul>);\n    }\n\n    render() {\n        if(this.state !== undefined && this.state.counted){\n            let list = this.makeEmployeesList()\n            return (\n                <div>\n                    <NavBar fatherlink={'/'}/>\n                    <div className={general.MainBodyContainer}>\n                        {list}\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <NavBar fatherlink={'/'}/>\n                    <div className={general.MainBodyContainer}>\n                        <div>No employees here</div>\n                    </div>\n                </div>\n            );\n        }\n\n    }\n}\n","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/StopsEditor.js",["171","172","173"],"import React from \"react\";\nimport * as API from \"../../API.js\"\nimport {RouteObject} from \"../../models/RouteObject\"\nimport Checkbox from \"../../components/additional-components/Checkbox\";\nimport { Link } from 'react-router-dom'\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport styles from \"../../styles/General.module.css\"\n\nconst routeTypes = [\n    'Тролейбус',\n    'Автобус',\n    'Трамвай',\n];\n\nclass StopsEditor extends React.Component {\n\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked : true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n        this.GetStops().then((stops) => {\n            let newStops = []\n            stops.forEach((stop) => {\n                newStops.push(<Link to={\"/edit/stop?stopId=\" + stop.stop_id}>\n                    <li key={stop.stop_id}>Станція {stop.stop_name}</li>\n                </Link>)\n            })\n\n\n            this.setState({\n                stops : newStops,\n                counted : true,\n            })\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetStops() {\n        return await API.getStops()\n    }\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            stops: [],\n            routes: []\n        }\n    }\n\n    getType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n        //     console.log(this.state.optionalRoutes)\n        //     console.log(this.selectedCheckboxes)\n        //      console.log(\"I choose this one: \")\n        //      console.log(this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes)))\n        //      let newDisplay = this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes))\n        //     console.log(newDisplay)\n\n\n    makeStopList(stops){\n        return (<ul>{stops.map((stop) => stop)}</ul>)\n    }\n\n\n    render() {\n        if(this.state === null || !this.state.adminChecked){\n            return (\n                <Loading/>\n            );\n        } else if(!this.state.isAdmin){\n            return (<Redirect to={'/'}/>)\n        } else {\n            let list = this.makeStopList(this.state.stops)\n            if (this.state.counted) {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <Link to={\"/add/stop\"}>\n                            <button>Додати нову зупинку</button>\n                        </Link>\n                        <div className={styles.container}>\n                            {list}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <Link to={\"/add/stop\"}>\n                            <button>Додати нову зупинку</button>\n                        </Link>\n                        <div className={styles.container}/>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default StopsEditor;","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/EmployeesEditor.js",["174","175","176"],"import React from \"react\";\nimport * as API from \"../../API.js\"\nimport styles from \"./Editor.module.css\"\nimport {RouteObject} from \"../../models/RouteObject\"\nimport Checkbox from \"../../components/additional-components/Checkbox\";\nimport { Link } from 'react-router-dom'\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport general from \"../../styles/General.module.css\";\nimport smallList from \"../../styles/SmallList.module.css\";\n\n\nconst routeTypes = [\n    'Тролейбус',\n    'Автобус',\n    'Трамвай',\n];\n\nclass EmployeesEditor extends React.Component {\n\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked : true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n        this.GetEmployees().then((employees) => {\n            let newEmployees = []\n            employees.forEach((employee) => {\n                newEmployees.push(<Link to={\"/edit/employee?id=\" + employee.id}>\n                    <li key={employee.id} className={general.listElement}><div className={general.listCard}><div className={smallList.smallP}>Працівник(ця)  {employee.name}</div></div></li>\n                </Link>)\n            })\n\n\n            this.setState({\n                employees : newEmployees,\n                counted : true,\n            })\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetEmployees() {\n        return await API.getEmployees()\n    }\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            stops: [],\n            routes: []\n        }\n    }\n\n    getType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n        //     console.log(this.state.optionalRoutes)\n        //     console.log(this.selectedCheckboxes)\n        //      console.log(\"I choose this one: \")\n        //      console.log(this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes)))\n        //      let newDisplay = this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes))\n        //     console.log(newDisplay)\n\n\n    makeEmployeesList(newEmployees){\n        return (<ul className={general.listOfCards}>{newEmployees.map((employees) => employees)}</ul>)\n    }\n\n/*    return (<ul className={general.listOfCards}>\n{\n    this.state.employees.map((employee) => <Link to={\"/employee?id=\" + employee[\"id\"]}><li key={employee[\"id\"]} >\n        <div className={general.listCard}><div className={smallList.smallP}>{employee[\"name\"]} {employee[\"surname\"]}</div></div></li></Link>)}</ul>);\n*/\n\n    render() {\n        if(this.state === null || !this.state.adminChecked || this.state.employees === undefined){\n            return (\n                <Loading/>\n            );\n        } else if(!this.state.isAdmin){\n            return (<Redirect to={'/'}/>)\n        } else {\n            let list = this.makeEmployeesList(this.state.employees)\n            if (this.state.counted) {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <div className={general.MainBodyContainer}>\n                            <Link to={\"/add/employee\"}>\n                                <button>Додати нового працівника</button>\n                            </Link>\n                            <div className={styles.container}>\n                                {list}\n                            </div>\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <div className={general.MainBodyContainer}>\n                            <Link to={\"/add/employee\"}>\n                                <button>Додати нового працівника</button>\n                            </Link>\n                            <div className={styles.container}/>\n                        </div>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default EmployeesEditor;","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditRoute.js",["177","178","179","180"],"import React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport * as API from \"../../API\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport TimeTableForm from \"../../components/additional-components/TimeTableForm\";\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport {AddStopInternal} from \"../AddElement/AddStop\";\nimport styles from \"../../styles/General.module.css\";\n\nexport class EditRoute extends React.Component{\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked: true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n    }\n\n    render() {\n        if (this.state === null || !this.state.adminChecked) {\n            return (\n                <Loading/>\n            );\n        } else if (!this.state.isAdmin) {\n            return (<Redirect to={'/'}/>)\n        } else {\n            return <EditRouteInternal/>\n        }\n    }\n}\n\nexport class EditRouteInternal extends React.Component{\n    constructor(props) {\n        super(props);\n        let id = this.getRouteId(window.location.href)\n        this.state = {\n            oldId: id,\n            number: id,\n            startTime: \"06:40\",\n            endTime: \"00:10\",\n            interval: 6,\n            type: 'Тролейбус',\n            stops: new Map()\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.addStop = this.addStop.bind(this);\n        this.removeStop = this.removeStop.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n        this.deleteElement = this.deleteElement.bind(this);\n        this.confirmedDelete = this.confirmedDelete.bind(this);\n        this.saveAndContinue = this.saveAndContinue.bind(this);\n        this.saveAndExit = this.saveAndExit.bind(this);\n        this.handleInputChangeArray = this.handleInputChangeArray.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleInputChangeArray(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        if(name[0] === 's'){\n            let stops = this.state.stops\n            let id = parseInt(name.substring(1))\n            stops[id] = value\n            this.setState({\n                stops: stops\n            });\n        }else{\n            let timeTable = this.state.timeTable\n            let id = parseInt(name.substring(1))\n            timeTable[id] = value\n            this.setState({\n                timeTable: timeTable\n            });\n        }\n\n    }\n\n    getRouteId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    getType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n\n    resetValues(routes){\n        let stopsNames = routes[0][\"stops\"]\n        let tt = [0].concat(routes[0][\"timetable\"])\n        this.setState({\n            number : routes[0][\"routeId\"],\n            startTime : routes[0][\"startTime\"],\n            endTime : routes[0][\"endTime\"],\n            interval : routes[0][\"interval\"],\n            type: this.getType(routes[0][\"type\"]),\n            stops : stopsNames,\n            timeTable: tt,\n            incorrectRoute : false,\n            returnToEditor: false,\n            confirmDelete : false,\n        }, function () {\n            console.log(\"ST: \" + this.state.startTime)\n        })\n    }\n\n    componentDidMount = () => {\n        this.GetRoute().then((routes) => {\n            if(routes.length === 0){\n                this.setState({\n                    incorrectRoute: true\n                })\n            } else {\n                this.resetValues(routes)\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n        this.GetStops().then((stops) => {\n            this.setState({\n               allStops: stops\n            }, function () {\n                console.log(\"ST: \" + this.state.startTime)\n            })\n\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetRoute() {\n        return await API.getRouteById(this.state.oldId)\n    }\n\n    async GetStops() {\n        return await API.getStops()\n    }\n\n    AddButton(){\n        return (\n            <div>\n                <TimeTableForm currentId = {this.state.number}/>\n            </div>\n        )\n    }\n\n    makeStopChoosing(id){\n        let optionsList = []\n        this.state.allStops.forEach((stop) => {\n            if(stop['stop_name'] === this.state.stops[id]){\n                optionsList.push(<option selected value = {stop['stop_name']}>{stop['stop_name']}</option>)\n            } else {\n                optionsList.push(<option value = {stop['stop_name']}>{stop['stop_name']}</option>)\n            }\n\n        })\n        return (\n            <select onChange={this.handleInputChangeArray} name={\"s\" + id} value={this.state.stops[id]}>\n                {optionsList}\n            </select>\n        )\n    }\n\n    makeTTChoosing(id){\n\n        if(id === 0){\n            return (<input onChange={this.handleInputChangeArray} min=\"0\" max = \"0\" type=\"number\" name={\"t\" + id}\n                   value={this.state.timeTable[id]}/>)\n        } else {\n            return (<input onChange={this.handleInputChangeArray} min=\"0\" type=\"number\" name={\"t\" + id}\n                   value={this.state.timeTable[id]}/>)\n        }\n\n    }\n\n    displayStationsAndTT(stops, tt){\n        let list = []\n\n        for(let i = 0; i < stops.length; i++){\n            list.push(<li>{this.makeStopChoosing(i)} --- {this.makeTTChoosing(i)}</li>)\n        }\n        return list\n    }\n\n    resetForm(){\n        console.log(\"Reset...\")\n        this.GetRoute().then((routes) => {\n            if(routes.length === 0){\n                this.setState({\n                    incorrectRoute: true\n                })\n            } else {\n               this.resetValues(routes)\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n    }\n\n    deleteElement(){\n        this.setState({\n            confirmDelete : true\n        })\n    };\n\n    confirmedDelete(){\n        API.deleteRoute(this.state.oldId, this.state)\n        this.setState({\n            returnToEditor : true\n        })\n    };\n\n    async saveChanges() {\n        if (this.state.oldId == this.state.number) {\n            let newRoute = await API.updateRoute(this.state);\n            this.state.oldId = newRoute[0][\"routeId\"]\n        } else {\n            let isAvailable = await API.checkAvailableRoute(this.state.number)\n            if (isAvailable) {\n                let newRoute = await API.updateRoute(this.state);\n                this.state.oldId = newRoute[0][\"routeId\"]\n            } else {\n                alert(\"Маршрут номер \" + this.state.number + \" вже існує!\")\n            }\n        }\n    }\n    async saveAndContinue(){\n        await this.saveChanges()\n    }\n\n    async saveAndExit(){\n        await this.saveChanges()\n        this.setState(\n            {returnToEditor : true}\n        )\n\n    }\n\n    addStop(){\n        let newStop = this.state.allStops[0].stop_name\n        let oldStops = this.state.stops.concat(newStop)\n        let newTimetable = this.state.timeTable.concat([[5.0]])\n        this.setState({\n            stops:oldStops,\n            timeTable:newTimetable\n        })\n    }\n\n    removeStop(){\n        let oldStops = this.state.stops\n        if(oldStops.length > 0){\n            oldStops.pop()\n            let newTimetable = this.state.timeTable\n            newTimetable.pop()\n            this.setState({\n                stops:oldStops,\n                timeTable:newTimetable\n            })\n        }\n    }\n\n    render(){\n        if(this.state.returnToEditor){\n            return (\n                <Redirect to={'/edit/routes'}/>\n            )\n        }\n        if(this.state.confirmDelete){\n            return (\n                <div>\n                    <NavBar fatherlink={'/edit/routes'}/>\n                    <form>\n                        <label>{\"Підтвердження видалення маршруту номер \" + this.state.oldId}</label><br/>\n                        <input type=\"button\" onClick={this.resetForm} value=\"Скасувати видалення\"/>\n                        <input type=\"button\" onClick={this.confirmedDelete} value=\"Видалити елемент\"/>\n                    </form>\n                </div>\n            )\n        }\n        if(this.state.incorrectRoute){\n            return (\n                <div>\n                    <NavBar fatherlink={'/edit/routes'}/>\n                    {this.AddButton()}\n                    <h1>Маршуруту з номером {this.state.number} не знайдено.</h1>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <NavBar fatherlink={'/edit/routes'}/>\n                <div className={styles.MainFormContainer}>\n                <form className={styles.editForm}>\n                    <label><b>{\"Редагування маршруту номер \" + this.state.number}</b></label><br/>\n                    <label>Номер маршруту: </label><input type=\"number\" className={styles.wideFromInput} value={this.state.number} name=\"number\" onChange={this.handleInputChange}/><br/>\n                    <label>Початок руху: </label><input type=\"text\" className={styles.wideFromInput} value={this.state.startTime} name=\"startTime\" onChange={this.handleInputChange}/><br/>\n                    <label>Кінець руху: </label><input type=\"text\" className={styles.wideFromInput} value={this.state.endTime} name=\"endTime\" onChange={this.handleInputChange}/><br/>\n                    <label>Інтервал: </label><input type=\"number\" className={styles.wideFromInput} value={this.state.interval} min=\"0\" name=\"interval\" onChange={this.handleInputChange}/><br/>\n                    <label>Тип маршруту: </label>\n                    <select name=\"type\" value={this.state.type} onChange={this.handleInputChange}>\n                        <option value=\"Тролейбус\">Тролейбус</option>\n                        <option value=\"Автобус\">Автобус</option>\n                        <option value=\"Трамвай\">Трамвай</option>\n                    </select>\n                    <br/>\n                    <label>Станції та розклад руху: </label>\n\n                    <ul>{this.displayStationsAndTT(this.state.stops, this.state.timeTable)}</ul>\n                    <input type=\"button\" onClick={this.addStop} value=\"+\"/>\n                    <input type=\"button\" onClick={this.removeStop} value=\"-\"/>\n                    <br/><br/>\n                    <div className={styles.AllMyButtons}>\n                    <input type=\"button\" onClick={this.resetForm} value=\"Скасувати зміни\"/>\n                    <input type=\"button\" onClick={this.deleteElement} value=\"Видалити елемент\"/>\n                    <input type=\"button\" onClick={this.saveAndContinue} value=\"Зберегти та продовжити\"/>\n                    <input type=\"button\" onClick={this.saveAndExit} value=\"Зберегти та вийти\"/>\n                    </div>\n                </form>\n                </div>\n            </div>\n\n        )\n\n\n    }\n\n\n}","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditStop.js",["181","182","183","184","185"],"import React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport * as API from \"../../API\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport TimeTableForm from \"../../components/additional-components/TimeTableForm\";\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport {EditRouteInternal} from \"./EditRoute\";\n\nexport class EditStop extends React.Component{\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked: true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n    }\n\n    render() {\n        if (this.state === null || !this.state.adminChecked) {\n            return (\n                <Loading/>\n            );\n        } else if (!this.state.isAdmin) {\n            return (<Redirect to={'/'}/>)\n        } else {\n            return <EditStopInternal/>\n        }\n    }\n}\n\nexport class EditStopInternal extends React.Component{\n    constructor(props) {\n        super(props);\n        let id = this.getStopId(window.location.href)\n        this.state = {\n            id: id,\n            name: \"\",\n            adminProved: true\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n        this.deleteElement = this.deleteElement.bind(this);\n        this.confirmedDelete = this.confirmedDelete.bind(this);\n        this.saveAndContinue = this.saveAndContinue.bind(this);\n        this.saveAndExit = this.saveAndExit.bind(this);\n        this.handleInputChangeArray = this.handleInputChangeArray.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleInputChangeArray(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        if(name[0] === 's'){\n            let stops = this.state.stops\n            let id = parseInt(name.substring(1))\n            stops[id] = value\n            this.setState({\n                stops: stops\n            });\n        }else{\n            let timeTable = this.state.timeTable\n            let id = parseInt(name.substring(1))\n            timeTable[id] = value\n            this.setState({\n                timeTable: timeTable\n            });\n        }\n\n    }\n\n    getStopId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    resetValues(stop){\n        this.setState({\n            id : stop.stop_id,\n            name: stop.stop_name,\n            incorrectRoute : false,\n            returnToEditor: false,\n            confirmDelete : false,\n        }, function () {\n            console.log(\"ST: \" + this.state.startTime)\n        })\n    }\n\n    componentDidMount = () => {\n        this.GetStop().then((stop) => {\n            if(stop.length === 0){\n                this.setState({\n                    incorrectRoute: true\n                })\n            } else {\n                this.resetValues(stop)\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n        this.GetStops().then((stops) => {\n            this.setState({\n                stops: stops\n            })\n\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetStop() {\n        let stops = await API.getStops()\n        let myStop = null\n        stops.forEach((stop) => {if(stop.stop_id === this.state.id) myStop = stop})\n        return myStop\n    }\n\n    async GetStops() {\n        return await API.getStops()\n    }\n\n    resetForm(){\n        console.log(\"Reset...\")\n        this.GetStop().then((stop) => {\n            if(stop.length === 0){\n                this.setState({\n                    incorrectRoute: true\n                })\n            } else {\n                this.resetValues(stop)\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n        this.GetStops().then((stops) => {\n            this.setState({\n                stops: stops\n            })\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n    }\n\n    deleteElement(){\n        this.setState({\n            confirmDelete : true\n        })\n    };\n\n    async confirmedDelete(){\n        await API.deleteStop(this.state.id, this.state)\n        this.setState({\n            returnToEditor : true\n        })\n    };\n\n    isNameAvailable(name){\n        let result = true\n        this.state.stops.forEach((stop) => {\n            if(stop.stop_name === name)\n                result = false\n        })\n        return result\n\n    }\n\n    async saveChanges() {\n        this.setState({\n            oldId : this.state.id\n        })\n        let isAvailable = this.isNameAvailable(this.state.name)\n        if (isAvailable) {\n            let newStop = await API.updateStop(this.state)\n            this.resetForm()\n        } else {\n            alert(\"Зупинка з назвою \" + this.state.name + \" вже існує!\")\n        }\n\n    }\n\n    async saveAndContinue(){\n        await this.saveChanges()\n    }\n\n    async saveAndExit(){\n        await this.saveChanges()\n        this.setState(\n            {returnToEditor : true}\n        )\n\n    }\n\n    render(){\n        if(!this.state.adminProved){\n            alert(\"You have no admin rights!\")\n            return (<Redirect to={'/'}/>)\n        }\n        if(this.state.returnToEditor){\n            return (\n                <Redirect to={'/edit/stops'}/>\n            )\n        }\n        if(this.state.confirmDelete){\n            return (\n                <div>\n                    <NavBar fatherlink={'/edit/stops'}/>\n                    <form>\n                        <label>{\"Підтвердження видалення зупинки \\\"Станція \" + this.state.name + \"\\\"\"}</label><br/>\n                        <input type=\"button\" onClick={this.resetForm} value=\"Скасувати видалення\"/>\n                        <input type=\"button\" onClick={this.confirmedDelete} value=\"Видалити елемент\"/>\n                    </form>\n                </div>\n            )\n        }\n        if(this.state.incorrectRoute){\n            return (\n                <div>\n                    <NavBar fatherlink={'/edit/stops'}/>\n                    <h1>Зупинки не знайдено.</h1>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <NavBar fatherlink={'/edit/stops'}/>\n                <form>\n                    <label>{\"Редагування зупинки\"}</label><br/>\n                    <label>Назва зупинки: </label><input type=\"text\" value={this.state.name} name=\"name\" onChange={this.handleInputChange}/><br/>\n\n                    <input type=\"button\" onClick={this.resetForm} value=\"Скасувати зміни\"/>\n                    <input type=\"button\" onClick={this.deleteElement} value=\"Видалити елемент\"/>\n                    <input type=\"button\" onClick={this.saveAndContinue} value=\"Зберегти та продовжити\"/>\n                    <input type=\"button\" onClick={this.saveAndExit} value=\"Зберегти та вийти\"/>\n                </form>\n            </div>\n\n        )\n\n\n    }\n\n\n}","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditEmployee.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/Editor.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/AddElement/AddRoute.js",["186","187","188","189"],"import React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport * as API from \"../../API\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport TimeTableForm from \"../../components/additional-components/TimeTableForm\";\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport styles from \"../../styles/General.module.css\";\n\nexport class AddRoute extends React.Component{\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked: true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n    }\n\n    render() {\n        if (this.state === null || !this.state.adminChecked) {\n            return (\n                <Loading/>\n            );\n        } else if (!this.state.isAdmin) {\n            return (<Redirect to={'/'}/>)\n        } else {\n            return <AddRouteInternal/>\n        }\n    }\n}\n\nclass AddRouteInternal extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            oldId : 0,\n            number: 0,\n            startTime: \"06:00\",\n            endTime: \"23:30\",\n            interval: 10,\n            type: 'Тролейбус',\n            timeTable : [],\n            stops: [],\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.addStop = this.addStop.bind(this);\n        this.removeStop = this.removeStop.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n        this.saveAndContinue = this.saveAndContinue.bind(this);\n        this.saveAndExit = this.saveAndExit.bind(this);\n        this.handleInputChangeArray = this.handleInputChangeArray.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleInputChangeArray(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        if(name[0] === 's'){\n            let stops = this.state.stops\n            let id = parseInt(name.substring(1))\n            stops[id] = value\n            this.setState({\n                stops: stops\n            });\n        }else{\n            let timeTable = this.state.timeTable\n            let id = parseInt(name.substring(1))\n            timeTable[id] = value\n            this.setState({\n                timeTable: timeTable\n            });\n        }\n\n    }\n\n    resetValues(routes){\n        let stopsNames = routes[0][\"stops\"]\n        let tt = [0].concat(routes[0][\"timetable\"])\n        this.setState({\n            startTime: \"06:00\",\n            endTime: \"23:30\",\n            interval: 10,\n            type: 'Тролейбус',\n            stops: new Map(),\n            timeTable: tt,\n            returnToEditor: false,\n        }, function () {\n            console.log(\"ST: \" + this.state.startTime)\n        })\n    }\n\n    componentDidMount = () => {\n\n        this.GetStops().then((stops) => {\n            this.setState({\n                allStops: stops\n            }, function () {\n                console.log(\"ST: \" + this.state.startTime)\n            })\n\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n\n    async GetStops() {\n        return await API.getStops()\n    }\n\n    makeStopChoosing(id){\n        let optionsList = []\n        this.state.allStops.forEach((stop) => {\n            if(stop['stop_name'] === this.state.stops[id]){\n                optionsList.push(<option selected value = {stop['stop_name']}>{stop['stop_name']}</option>)\n            } else {\n                optionsList.push(<option value = {stop['stop_name']}>{stop['stop_name']}</option>)\n            }\n\n        })\n        return (\n            <select onChange={this.handleInputChangeArray} name={\"s\" + id} value={this.state.stops[id]}>\n                {optionsList}\n            </select>\n        )\n    }\n\n    makeTTChoosing(id){\n\n        if(id === 0){\n            return (<input onChange={this.handleInputChangeArray} min=\"0\" max = \"0\" type=\"number\" name={\"t\" + id}\n                           value={this.state.timeTable[id]}/>)\n        } else {\n            return (<input onChange={this.handleInputChangeArray} min=\"0\" type=\"number\" name={\"t\" + id}\n                           value={this.state.timeTable[id]}/>)\n        }\n\n    }\n\n    displayStationsAndTT(stops, tt){\n        let list = []\n\n        for(let i = 0; i < stops.length; i++){\n            list.push(<li>{this.makeStopChoosing(i)} --- {this.makeTTChoosing(i)}</li>)\n        }\n        return list\n    }\n\n    resetForm(){\n        console.log(\"Reset...\")\n\n        this.setState({\n            oldId : 0,\n            number: 0,\n            startTime: \"06:00\",\n            endTime: \"23:30\",\n            interval: 10,\n            type: 'Тролейбус',\n            timeTable : [],\n            stops: [],\n        })\n\n    }\n\n    async saveChanges() {\n        let isAvailable = this.state.number > 0\n        if(isAvailable) {\n            isAvailable = await API.checkAvailableRoute(this.state.number)\n            if (isAvailable) {\n                await API.updateRoute(this.state);\n            } else {\n                alert(\"Маршрут номер \" + this.state.number + \" вже існує!\")\n            }\n        } else {\n            alert(\"Номер маршруту має бути більшим від нуля!\")\n        }\n    }\n\n    reload(){\n\n    }\n\n    addStop(){\n        let newStop = this.state.allStops[0].stop_name\n        let oldStops = this.state.stops.concat(newStop)\n        let newTimetable = this.state.timeTable.concat([5.0])\n        this.setState({\n            stops:oldStops,\n            timeTable:newTimetable\n        })\n    }\n\n    removeStop(){\n        let oldStops = this.state.stops\n        if(oldStops.length > 0){\n            oldStops.pop()\n            let newTimetable = this.state.timeTable\n            newTimetable.pop()\n            this.setState({\n                stops:oldStops,\n                timeTable:newTimetable\n            })\n        }\n    }\n\n    async saveAndContinue() {\n        await this.saveChanges()\n        this.resetForm()\n    }\n\n    async saveAndExit(){\n        await this.saveChanges()\n        this.setState(\n            {returnToEditor : true}\n        )\n\n    }\n\n    render(){\n        if(this.state.returnToEditor){\n            return (\n                <Redirect to={'/edit/routes'}/>\n            )\n        }\n        return (\n            <div>\n                <NavBar fatherlink={'/edit/routes'}/>\n\n                <div className={styles.MainFormContainer}>\n                    <form className={styles.editForm}>\n                        <label><b>{\"Реєстрація нового маршруту\"}</b></label><br/>\n                    <label>Номер маршруту: </label><input type=\"number\" className={styles.wideFromInput} value={this.state.number} name=\"number\" onChange={this.handleInputChange}/><br/>\n                    <label>Початок руху: </label><input type=\"text\" className={styles.wideFromInput} value={this.state.startTime} name=\"startTime\" onChange={this.handleInputChange}/><br/>\n                    <label>Кінець руху: </label><input type=\"text\" className={styles.wideFromInput} value={this.state.endTime} name=\"endTime\" onChange={this.handleInputChange}/><br/>\n                    <label>Інтервал: </label><input type=\"number\" className={styles.wideFromInput} value={this.state.interval} min=\"1\" name=\"interval\" onChange={this.handleInputChange}/><br/>\n                    <label>Тип маршруту: </label>\n                    <select name=\"type\" value={this.state.type} onChange={this.handleInputChange}>\n                        <option value=\"Тролейбус\">Тролейбус</option>\n                        <option value=\"Автобус\">Автобус</option>\n                        <option value=\"Трамвай\">Трамвай</option>\n                    </select>\n                    <br/>\n                    <label>Станції та розклад руху: </label>\n\n                    <ul>{this.displayStationsAndTT(this.state.stops, this.state.timeTable)}</ul>\n                    <input type=\"button\" onClick={this.addStop} value=\"+\"/>\n                    <input type=\"button\" onClick={this.removeStop} value=\"-\"/>\n                    <br/><br/>\n                    <input type=\"button\" onClick={this.resetForm} value=\"Скасувати зміни\"/>\n                    <input type=\"button\" onClick={this.saveAndContinue} value=\"Зберегти та додати наступний\"/>\n                    <input type=\"button\" onClick={this.saveAndExit} value=\"Зберегти та вийти\"/>\n                </form>\n                </div>\n            </div>\n\n        )\n\n\n    }\n\n\n}","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/AddElement/AddStop.js",["190","191","192","193"],"import React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport * as API from \"../../API\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport TimeTableForm from \"../../components/additional-components/TimeTableForm\";\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport styles from \"../../styles/General.module.css\";\n\nexport class AddStop extends React.Component{\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked: true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n    }\n\n    render() {\n        if (this.state === null || !this.state.adminChecked) {\n            return (\n                <Loading/>\n            );\n        } else if (!this.state.isAdmin) {\n            return (<Redirect to={'/'}/>)\n        } else {\n            return <AddStopInternal/>\n        }\n    }\n}\n\nexport class AddStopInternal extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"Безіменна\",\n            oldId : 0,\n            number: 0,\n            startTime: \"06:00\",\n            endTime: \"23:30\",\n            interval: 10,\n            type: 'Тролейбус',\n            timeTable : [],\n            stops: [],\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.saveAndContinue = this.saveAndContinue.bind(this);\n        this.saveAndExit = this.saveAndExit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    resetForm(){\n\n        this.GetStops().then((stops) => {\n            this.setState({\n                stops: stops,\n                name: \"\"\n            })\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n    }\n\n\n\n    componentDidMount = () => {\n\n        this.GetStops().then((stops) => {\n            this.setState({\n                stops: stops\n            }, function () {\n                console.log(\"ST: \" + this.state.startTime)\n            })\n\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n\n    async GetStops() {\n        return await API.getStops()\n    }\n\n    isNameAvailable(name){\n        let result = true\n        this.state.stops.forEach((stop) => {\n            if(stop.stop_name === name)\n                result = false\n        })\n        return result\n\n    }\n\n    mex(){\n        let result = 1\n        this.state.stops.forEach((stop) => {\n            if(result <= stop.stop_id)\n                result = stop.stop_id + 1\n        })\n        return result\n    }\n\n    async saveChanges() {\n        let newNumber = await this.mex()\n        this.setState({\n            oldId : 0,\n            id : newNumber\n        })\n        let isAvailable = this.isNameAvailable(this.state.name)\n        if (isAvailable) {\n            let newStop = await API.updateStop(this.state)\n            this.resetForm()\n        } else {\n            alert(\"Зупинка з назвою \" + this.state.name + \" вже існує!\")\n        }\n    }\n\n    async saveAndContinue() {\n        await this.saveChanges()\n    }\n\n    async saveAndExit(){\n        await this.saveChanges()\n        this.setState(\n            {returnToEditor : true}\n        )\n\n    }\n\n    render(){\n        if(this.state.returnToEditor){\n            return (\n                <Redirect to={'/edit/stops'}/>\n            )\n        }\n        return (\n            <div>\n                <NavBar fatherlink={'/edit/stops'}/>\n                <div className={styles.MainFormContainer}>\n                    <form className={styles.editForm}>\n                        <label><b>{\"Реєстрація нової зупинки\"}</b></label><br/>\n                    <label>Вигадайте унікальне ім'я для нової зупинки: </label><input type=\"text\" className={styles.wideFromInput} value={this.state.name} name=\"name\" onChange={this.handleInputChange}/><br/>\n\n                    <input type=\"button\" onClick={this.saveAndContinue} value=\"Зберегти та додати наступний\"/>\n                    <input type=\"button\" onClick={this.saveAndExit} value=\"Зберегти та вийти\"/>\n                </form>\n                </div>\n            </div>\n\n        )\n\n\n    }\n\n\n}","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/AddElement/AddEmployee.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/API.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/RouteObject.js",["194"],"import React from \"react\";\nimport Checkbox from '../components/additional-components/Checkbox';\n\n\n\nexport class RouteObject extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            routeNumber : props.routeProps[\"routeId\"],\n            routeMap : props.routeProps[\"stops\"],\n            type : this.getType(props.routeProps[\"type\"]),\n            visible : true\n        }\n\n    }\n\n    getType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n\n\n\n    render(){\n        let list = []\n        let id = 0;\n        this.state.routeMap.forEach(key => {\n            list.push(<li key = {++id}>{key}</li>);\n        });\n        return(\n                <div>Я {this.state.type} номер {this.state.routeNumber} і маю наступний маршрут:\n                    {<ul>{list}</ul>}\n                </div>\n        );\n    }\n\n}","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/nav-bar.js",["195","196"],"\n\n// src/components/nav-bar.js\n\nimport React from \"react\";\n\nimport MainNav from \"./main-nav\";\nimport AuthNav from \"./auth-nav\";\nimport styles from \"../styles/Navbar.module.css\"\nimport {Link} from \"react-router-dom\";\nimport * as API from \"../API\"\nimport {Email} from \"./email\";\n\nconst NavBar = (props) => {\n    let prevButton = <button>Назад</button>\n    if(props.fatherlink === ''){\n        prevButton = <div className={styles.backButtonWrapper}><button className={styles.invisible}>Назад</button></div>\n    } else {\n        prevButton = <div className={styles.backButtonWrapper}><button className={styles.backButton}>Назад</button></div>\n    }\n    Email();\n  return (\n    <div className={styles.navigationContainer}>\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <div className={styles.container}>\n            <Link to={props.fatherlink}>{prevButton}</Link>\n            <div className={styles.logoWrapper} ><MainNav /></div>\n          <AuthNav />\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nconst MainPageNavBar = () => {\n    return (\n        <div className=\"nav-container mb-3\">\n            <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n                <div className=\"container\">\n                    <div className=\"navbar-brand logo\" />\n                    <AuthNav />\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nexport default NavBar;\n\n\n","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/index.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/loading.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/additional-components/Checkbox.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/additional-components/TimeTableForm.js",["197","198"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom'; // <--- import `withRouter`. We will use this in the bottom of our file.\nimport styles from \"../../styles/General.module.css\"\n\nclass TimeTableForm extends Component {\n\n    constructor(props) {\n        super(props);\n        if(props.currentId === undefined)\n            props.currentId = 1\n        this.state = {\n            newRouteId: props.currentId\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({newRouteId: event.target.value});\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label>Номер маршруту: </label> <input type = \"number\" value = {this.state.newRouteId} onChange={this.handleChange} name=\"newRouteId\"/>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(TimeTableForm); // <--- make sure to wrap your component with `withRouter()`","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/TimeTableObject.js",["199","200"],"import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport * as API from \"../API\";\nimport { withRouter } from 'react-router-dom';\nimport TimeTableForm from \"../components/additional-components/TimeTableForm\";\nimport NavBar from \"../components/nav-bar\";\nimport styles from \"../styles/General.module.css\";\n\n\n\nexport class TimeTableObject extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            number : props.routeId,\n            startTime : \"06:40\",\n            endTime : \"00:20\",\n            interval : 10,\n            stops : new Map()\n        }\n    }\n\n    getCurrentTime() {\n        let timeStr = new Date().toLocaleString().split(\",\")[1]\n        let result = parseInt(timeStr.split(':')[0]) * 60 + parseInt(timeStr.split(':')[1])\n        let pm = timeStr.split(\" \")[2]\n        if(pm === \"PM\"){\n            result += (12 * 60);\n        }\n        return result.toString()\n    }\n\n    toNormalTime(value){\n        let hours = (Math.floor(value/60) % 24)\n        return(Math.floor(hours/10)).toString() +\n            ((hours) % 10).toString() +\n            \":\" +\n            (Math.floor((value % 60)/10)).toString() +\n            ((value % 60) % 10).toString();\n\n    }\n\n    toTimePeriod(value){\n        if(value < 60){\n            return value.toString() + \" minutes.\";\n        } else {\n            let hours = Math.floor(value/60).toString();\n            value %= 60;\n            return hours + \"hours and \" + value.toString() + \" minutes.\";\n        }\n    }\n\n    timeToInt(timeStr){\n        return parseInt(timeStr.split(':')[0]) * 60 + parseInt(timeStr.split(':')[1])\n    }\n\n    countTimeToStops(){\n        let timeToStops = new Map();\n\n        let currentTime = this.getCurrentTime()\n        let currentBus = this.timeToInt(this.state.endTime);\n        while(currentBus - this.state.interval > currentTime) currentBus-=this.state.interval;\n\n        while(currentBus + this.totalTime > currentTime){\n            let a = 0;\n            for (let [key, value] of  this.state.stops.entries()) {\n                a += value;\n                if(currentBus + a - currentTime  >= 0){\n                    timeToStops.set(key, currentBus + a - currentTime);\n                }\n\n            }\n            currentBus -= this.state.interval;\n        }\n\n        return timeToStops;\n    }\n\n    listTime(timeToStops){\n        let list = []\n        timeToStops.forEach((value, key) => list.push(<tr><td>{key}</td><td>{value}</td></tr>));\n        return (\n            <table>{list}</table>\n        );\n    }\n\n    componentDidMount = () => {\n        this.GetTimeTable().then((routes) => {\n            if(routes.length === 0){\n                this.setState({\n                    incorrectRoute: true\n                })\n            } else {\n                let newStops = new Map()\n                let stopsNames = routes[0][\"stops\"]\n                let tt = routes[0][\"timetable\"]\n                newStops.set(stopsNames[0], 0)\n                for(let i = 0; i < tt.length; i++){\n                    newStops.set(stopsNames[i+1], tt[i])\n                }\n                this.setState({\n                    number : routes[0][\"routeId\"],\n                    startTime : routes[0][\"startTime\"],\n                    endTime : routes[0][\"endTime\"],\n                    interval : routes[0][\"interval\"],\n                    stops : newStops,\n                    incorrectRoute : false\n                }, function () {\n                    console.log(\"ST: \" + this.state.startTime)\n                })\n\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetTimeTable() {\n        return await API.getRouteById(this.state.number)\n    }\n\n    AddButton(){\n        return (\n            <div>\n                <TimeTableForm currentId = {this.state.number}/>\n            </div>\n        )\n    }\n\n    render(){\n\n        if(this.state.incorrectRoute){\n            return (\n                <div className={styles.MainBodyContainer}>\n                    {this.AddButton()}\n                    <h1>Маршуруту з номером {this.state.number} не знайдено.</h1>\n                </div>\n            )\n        }\n        this.totalTime = 0;\n\n        this.state.stops.forEach((value, key) => this.totalTime += value);\n        let currentTime = this.getCurrentTime();\n        let timeToStops = this.countTimeToStops();\n        let listStopTimes = this.listTime(timeToStops)\n        if(this.state === undefined || this.state.number === undefined || isNaN(this.state.number)){\n            return  <div className={styles.MainBodyContainer}>\n                    <Redirect to={\"/timetables\"}/>\n                    {this.AddButton()}\n                    <p>Поточний час: {this.toNormalTime(currentTime)}</p>\n                </div>\n        } else {\n            return (\n                <div className={styles.MainBodyContainer}>\n                    <Redirect to={\"/timetables\"}/>\n                    {this.AddButton()}\n                    <p>Поточний час: {this.toNormalTime(currentTime)}</p>\n                    <p>Номер маршруту: {this.state.number}</p>\n                    <p>Перший рейс: {this.state.startTime}</p>\n                    <p>Останній рейс: {this.state.endTime}</p>\n                    <p>Інтервал: {this.toTimePeriod(this.state.interval)}</p>\n                    <div>Очікуйте наступний транспорт в такий час: <br/>{listStopTimes}</div>\n                </div>\n            )\n        }\n\n\n\n\n    }\n\n\n}","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/main-nav.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/auth-nav.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/email.js",["201"],"import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport * as API from \"../API\"\n\nexport function Email(){\n    const {user} = useAuth0();\n    if(user===undefined){\n        API.setUser('')\n    } else {\n        API.setUser(user.email);\n    }\n\n}\n\n//export default Email;","/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/home-content.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/footer.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/hero.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/authentication-button.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/login-button.js",[],"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/components/logout-button.js",[],{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"206","line":4,"column":22,"nodeType":"204","messageId":"205","endLine":4,"endColumn":28},{"ruleId":"202","severity":1,"message":"207","line":7,"column":5,"nodeType":"204","messageId":"205","endLine":7,"endColumn":9},{"ruleId":"202","severity":1,"message":"208","line":8,"column":5,"nodeType":"204","messageId":"205","endLine":8,"endColumn":13},{"ruleId":"202","severity":1,"message":"209","line":17,"column":10,"nodeType":"204","messageId":"205","endLine":17,"endColumn":16},{"ruleId":"202","severity":1,"message":"210","line":17,"column":18,"nodeType":"204","messageId":"205","endLine":17,"endColumn":24},{"ruleId":"202","severity":1,"message":"208","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"211","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":20},{"ruleId":"202","severity":1,"message":"212","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":21},{"ruleId":"202","severity":1,"message":"208","line":5,"column":9,"nodeType":"204","messageId":"205","endLine":5,"endColumn":17},{"ruleId":"202","severity":1,"message":"213","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":14},{"ruleId":"202","severity":1,"message":"214","line":4,"column":9,"nodeType":"204","messageId":"205","endLine":4,"endColumn":24},{"ruleId":"202","severity":1,"message":"208","line":5,"column":15,"nodeType":"204","messageId":"205","endLine":5,"endColumn":23},{"ruleId":"202","severity":1,"message":"213","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":14},{"ruleId":"202","severity":1,"message":"215","line":3,"column":9,"nodeType":"204","messageId":"205","endLine":3,"endColumn":20},{"ruleId":"202","severity":1,"message":"216","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":16},{"ruleId":"202","severity":1,"message":"217","line":11,"column":7,"nodeType":"204","messageId":"205","endLine":11,"endColumn":17},{"ruleId":"202","severity":1,"message":"215","line":4,"column":9,"nodeType":"204","messageId":"205","endLine":4,"endColumn":20},{"ruleId":"202","severity":1,"message":"216","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":16},{"ruleId":"202","severity":1,"message":"217","line":14,"column":7,"nodeType":"204","messageId":"205","endLine":14,"endColumn":17},{"ruleId":"202","severity":1,"message":"207","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"218","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":22},{"ruleId":"202","severity":1,"message":"219","line":8,"column":9,"nodeType":"204","messageId":"205","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":242,"column":30,"nodeType":"222","messageId":"223","endLine":242,"endColumn":32},{"ruleId":"202","severity":1,"message":"207","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"218","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":22},{"ruleId":"202","severity":1,"message":"212","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":21},{"ruleId":"202","severity":1,"message":"224","line":8,"column":9,"nodeType":"204","messageId":"205","endLine":8,"endColumn":26},{"ruleId":"202","severity":1,"message":"225","line":194,"column":17,"nodeType":"204","messageId":"205","endLine":194,"endColumn":24},{"ruleId":"202","severity":1,"message":"207","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"218","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":22},{"ruleId":"202","severity":1,"message":"212","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":21},{"ruleId":"202","severity":1,"message":"226","line":91,"column":13,"nodeType":"204","messageId":"205","endLine":91,"endColumn":23},{"ruleId":"202","severity":1,"message":"207","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"218","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":22},{"ruleId":"202","severity":1,"message":"212","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":21},{"ruleId":"202","severity":1,"message":"225","line":127,"column":17,"nodeType":"204","messageId":"205","endLine":127,"endColumn":24},{"ruleId":"202","severity":1,"message":"216","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"227","line":11,"column":13,"nodeType":"204","messageId":"205","endLine":11,"endColumn":16},{"ruleId":"202","severity":1,"message":"228","line":35,"column":7,"nodeType":"204","messageId":"205","endLine":35,"endColumn":21},{"ruleId":"202","severity":1,"message":"208","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":18},{"ruleId":"202","severity":1,"message":"213","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":14},{"ruleId":"202","severity":1,"message":"211","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":20},{"ruleId":"202","severity":1,"message":"209","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"229","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'NavBar' is defined but never used.","'Footer' is defined but never used.","'withRouter' is defined but never used.","'TimeTableForm' is defined but never used.","'styles' is defined but never used.","'TimeTableObject' is defined but never used.","'RouteObject' is defined but never used.","'Checkbox' is defined but never used.","'routeTypes' is assigned a value but never used.","'confirmAlert' is defined but never used.","'AddStopInternal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EditRouteInternal' is defined but never used.","'newStop' is assigned a value but never used.","'stopsNames' is assigned a value but never used.","'API' is defined but never used.","'MainPageNavBar' is assigned a value but never used.","'React' is defined but never used."]