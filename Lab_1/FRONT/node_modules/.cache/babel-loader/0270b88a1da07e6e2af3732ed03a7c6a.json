{"ast":null,"code":"var _jsxFileName = \"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditRoute.js\";\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport * as API from \"../../API\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport TimeTableForm from \"../../components/additional-components/TimeTableForm\";\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport { AddStopInternal } from \"../AddElement/AddStop\";\nimport styles from \"../../styles/General.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class EditRoute extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.isAdmin().then(result => {\n        this.setState({\n          adminChecked: true,\n          isAdmin: result[\"isAdmin\"]\n        });\n      });\n    };\n  }\n\n  async isAdmin() {\n    return await API.checkAdmin();\n  }\n\n  render() {\n    if (this.state === null || !this.state.adminChecked) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    } else if (!this.state.isAdmin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(EditRouteInternal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\nexport class EditRouteInternal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.GetRoute().then(routes => {\n        if (routes.length === 0) {\n          this.setState({\n            incorrectRoute: true\n          });\n        } else {\n          this.resetValues(routes);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.GetStops().then(stops => {\n        this.setState({\n          allStops: stops\n        }, function () {\n          console.log(\"ST: \" + this.state.startTime);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    let id = this.getRouteId(window.location.href);\n    this.state = {\n      oldId: id,\n      number: id,\n      startTime: \"06:40\",\n      endTime: \"00:10\",\n      interval: 6,\n      type: 'Тролейбус',\n      stops: new Map()\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addStop = this.addStop.bind(this);\n    this.removeStop = this.removeStop.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n    this.deleteElement = this.deleteElement.bind(this);\n    this.confirmedDelete = this.confirmedDelete.bind(this);\n    this.saveAndContinue = this.saveAndContinue.bind(this);\n    this.saveAndExit = this.saveAndExit.bind(this);\n    this.handleInputChangeArray = this.handleInputChangeArray.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleInputChangeArray(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    if (name[0] === 's') {\n      let stops = this.state.stops;\n      let id = parseInt(name.substring(1));\n      stops[id] = value;\n      this.setState({\n        stops: stops\n      });\n    } else {\n      let timeTable = this.state.timeTable;\n      let id = parseInt(name.substring(1));\n      timeTable[id] = value;\n      this.setState({\n        timeTable: timeTable\n      });\n    }\n  }\n\n  getRouteId(url) {\n    let id = url.lastIndexOf('=');\n    let numberStr = url.substring(id + 1);\n    return parseInt(numberStr);\n  }\n\n  getType(number) {\n    switch (number) {\n      case 1:\n        return \"Тролейбус\";\n\n      case 2:\n        return \"Автобус\";\n\n      case 3:\n        return \"Трамвай\";\n\n      default:\n        return \"Тролейбус\";\n    }\n  }\n\n  resetValues(routes) {\n    let stopsNames = routes[0][\"stops\"];\n    let tt = [0].concat(routes[0][\"timetable\"]);\n    this.setState({\n      number: routes[0][\"routeId\"],\n      startTime: routes[0][\"startTime\"],\n      endTime: routes[0][\"endTime\"],\n      interval: routes[0][\"interval\"],\n      type: this.getType(routes[0][\"type\"]),\n      stops: stopsNames,\n      timeTable: tt,\n      incorrectRoute: false,\n      returnToEditor: false,\n      confirmDelete: false\n    }, function () {\n      console.log(\"ST: \" + this.state.startTime);\n    });\n  }\n\n  async GetRoute() {\n    return await API.getRouteById(this.state.oldId);\n  }\n\n  async GetStops() {\n    return await API.getStops();\n  }\n\n  AddButton() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TimeTableForm, {\n        currentId: this.state.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n\n  makeStopChoosing(id) {\n    let optionsList = [];\n    this.state.allStops.forEach(stop => {\n      if (stop['stop_name'] === this.state.stops[id]) {\n        optionsList.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: stop['stop_name'],\n          children: stop['stop_name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 34\n        }, this));\n      } else {\n        optionsList.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: stop['stop_name'],\n          children: stop['stop_name']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 34\n        }, this));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: this.handleInputChangeArray,\n      name: \"s\" + id,\n      value: this.state.stops[id],\n      children: optionsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n\n  makeTTChoosing(id) {\n    if (id === 0) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: this.handleInputChangeArray,\n        min: \"0\",\n        max: \"0\",\n        type: \"number\",\n        name: \"t\" + id,\n        value: this.state.timeTable[id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: this.handleInputChangeArray,\n        min: \"0\",\n        type: \"number\",\n        name: \"t\" + id,\n        value: this.state.timeTable[id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  displayStationsAndTT(stops, tt) {\n    let list = [];\n\n    for (let i = 0; i < stops.length; i++) {\n      list.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [this.makeStopChoosing(i), \" --- \", this.makeTTChoosing(i)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 23\n      }, this));\n    }\n\n    return list;\n  }\n\n  resetForm() {\n    console.log(\"Reset...\");\n    this.GetRoute().then(routes => {\n      if (routes.length === 0) {\n        this.setState({\n          incorrectRoute: true\n        });\n      } else {\n        this.resetValues(routes);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteElement() {\n    this.setState({\n      confirmDelete: true\n    });\n  }\n\n  confirmedDelete() {\n    API.deleteRoute(this.state.oldId, this.state);\n    this.setState({\n      returnToEditor: true\n    });\n  }\n\n  async saveChanges() {\n    if (this.state.oldId == this.state.number) {\n      let newRoute = await API.updateRoute(this.state);\n      this.state.oldId = newRoute[0][\"routeId\"];\n    } else {\n      let isAvailable = await API.checkAvailableRoute(this.state.number);\n\n      if (isAvailable) {\n        let newRoute = await API.updateRoute(this.state);\n        this.state.oldId = newRoute[0][\"routeId\"];\n      } else {\n        alert(\"Маршрут номер \" + this.state.number + \" вже існує!\");\n      }\n    }\n  }\n\n  async saveAndContinue() {\n    await this.saveChanges();\n  }\n\n  async saveAndExit() {\n    await this.saveChanges();\n    this.setState({\n      returnToEditor: true\n    });\n  }\n\n  addStop() {\n    let newStop = this.state.allStops[0].stop_name;\n    let oldStops = this.state.stops.concat(newStop);\n    let newTimetable = this.state.timeTable.concat([[5.0]]);\n    this.setState({\n      stops: oldStops,\n      timeTable: newTimetable\n    });\n  }\n\n  removeStop() {\n    let oldStops = this.state.stops;\n\n    if (oldStops.length > 0) {\n      oldStops.pop();\n      let newTimetable = this.state.timeTable;\n      newTimetable.pop();\n      this.setState({\n        stops: oldStops,\n        timeTable: newTimetable\n      });\n    }\n  }\n\n  render() {\n    if (this.state.returnToEditor) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/edit/routes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.confirmDelete) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          fatherlink: '/edit/routes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Підтвердження видалення маршруту номер \" + this.state.oldId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 102\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.resetForm,\n            value: \"\\u0421\\u043A\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438 \\u0432\\u0438\\u0434\\u0430\\u043B\\u0435\\u043D\\u043D\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.confirmedDelete,\n            value: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0435\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.incorrectRoute) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          fatherlink: '/edit/routes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), this.AddButton(), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u041C\\u0430\\u0440\\u0448\\u0443\\u0440\\u0443\\u0442\\u0443 \\u0437 \\u043D\\u043E\\u043C\\u0435\\u0440\\u043E\\u043C \", this.state.number, \" \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        fatherlink: '/edit/routes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MainFormContainer,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.editForm,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Редагування маршруту номер \" + this.state.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 94\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\\u0443: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: styles.wideFromInput,\n            value: this.state.number,\n            name: \"number\",\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 181\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041F\\u043E\\u0447\\u0430\\u0442\\u043E\\u043A \\u0440\\u0443\\u0445\\u0443: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: styles.wideFromInput,\n            value: this.state.startTime,\n            name: \"startTime\",\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 183\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041A\\u0456\\u043D\\u0435\\u0446\\u044C \\u0440\\u0443\\u0445\\u0443: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: styles.wideFromInput,\n            value: this.state.endTime,\n            name: \"endTime\",\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 178\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0406\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: styles.wideFromInput,\n            value: this.state.interval,\n            min: \"0\",\n            name: \"interval\",\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 187\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0422\\u0438\\u043F \\u043C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\\u0443: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: this.state.type,\n            onChange: this.handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\u0422\\u0440\\u043E\\u043B\\u0435\\u0439\\u0431\\u0443\\u0441\",\n              children: \"\\u0422\\u0440\\u043E\\u043B\\u0435\\u0439\\u0431\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\u0410\\u0432\\u0442\\u043E\\u0431\\u0443\\u0441\",\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u0431\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\u0422\\u0440\\u0430\\u043C\\u0432\\u0430\\u0439\",\n              children: \"\\u0422\\u0440\\u0430\\u043C\\u0432\\u0430\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0421\\u0442\\u0430\\u043D\\u0446\\u0456\\u0457 \\u0442\\u0430 \\u0440\\u043E\\u0437\\u043A\\u043B\\u0430\\u0434 \\u0440\\u0443\\u0445\\u0443: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.displayStationsAndTT(this.state.stops, this.state.timeTable)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.addStop,\n            value: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            onClick: this.removeStop,\n            value: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.AllMyButtons,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              onClick: this.resetForm,\n              value: \"\\u0421\\u043A\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438 \\u0437\\u043C\\u0456\\u043D\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              onClick: this.deleteElement,\n              value: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0435\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              onClick: this.saveAndContinue,\n              value: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438 \\u0442\\u0430 \\u043F\\u0440\\u043E\\u0434\\u043E\\u0432\\u0436\\u0438\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              onClick: this.saveAndExit,\n              value: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438 \\u0442\\u0430 \\u0432\\u0438\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/EditElement/EditRoute.js"],"names":["React","Link","Redirect","API","confirmAlert","TimeTableForm","NavBar","Loading","AddStopInternal","styles","EditRoute","Component","componentDidMount","isAdmin","then","result","setState","adminChecked","checkAdmin","render","state","EditRouteInternal","constructor","props","GetRoute","routes","length","incorrectRoute","resetValues","catch","error","console","log","GetStops","stops","allStops","startTime","id","getRouteId","window","location","href","oldId","number","endTime","interval","type","Map","handleInputChange","bind","addStop","removeStop","resetForm","deleteElement","confirmedDelete","saveAndContinue","saveAndExit","handleInputChangeArray","event","target","value","checked","name","parseInt","substring","timeTable","url","lastIndexOf","numberStr","getType","stopsNames","tt","concat","returnToEditor","confirmDelete","getRouteById","getStops","AddButton","makeStopChoosing","optionsList","forEach","stop","push","makeTTChoosing","displayStationsAndTT","list","i","deleteRoute","saveChanges","newRoute","updateRoute","isAvailable","checkAvailableRoute","alert","newStop","stop_name","oldStops","newTimetable","pop","MainFormContainer","editForm","wideFromInput","AllMyButtons"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport * as API from \"../../API\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport TimeTableForm from \"../../components/additional-components/TimeTableForm\";\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport {AddStopInternal} from \"../AddElement/AddStop\";\nimport styles from \"../../styles/General.module.css\";\n\nexport class EditRoute extends React.Component{\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked: true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n    }\n\n    render() {\n        if (this.state === null || !this.state.adminChecked) {\n            return (\n                <Loading/>\n            );\n        } else if (!this.state.isAdmin) {\n            return (<Redirect to={'/'}/>)\n        } else {\n            return <EditRouteInternal/>\n        }\n    }\n}\n\nexport class EditRouteInternal extends React.Component{\n    constructor(props) {\n        super(props);\n        let id = this.getRouteId(window.location.href)\n        this.state = {\n            oldId: id,\n            number: id,\n            startTime: \"06:40\",\n            endTime: \"00:10\",\n            interval: 6,\n            type: 'Тролейбус',\n            stops: new Map()\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.addStop = this.addStop.bind(this);\n        this.removeStop = this.removeStop.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n        this.deleteElement = this.deleteElement.bind(this);\n        this.confirmedDelete = this.confirmedDelete.bind(this);\n        this.saveAndContinue = this.saveAndContinue.bind(this);\n        this.saveAndExit = this.saveAndExit.bind(this);\n        this.handleInputChangeArray = this.handleInputChangeArray.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleInputChangeArray(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        if(name[0] === 's'){\n            let stops = this.state.stops\n            let id = parseInt(name.substring(1))\n            stops[id] = value\n            this.setState({\n                stops: stops\n            });\n        }else{\n            let timeTable = this.state.timeTable\n            let id = parseInt(name.substring(1))\n            timeTable[id] = value\n            this.setState({\n                timeTable: timeTable\n            });\n        }\n\n    }\n\n    getRouteId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    getType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n\n    resetValues(routes){\n        let stopsNames = routes[0][\"stops\"]\n        let tt = [0].concat(routes[0][\"timetable\"])\n        this.setState({\n            number : routes[0][\"routeId\"],\n            startTime : routes[0][\"startTime\"],\n            endTime : routes[0][\"endTime\"],\n            interval : routes[0][\"interval\"],\n            type: this.getType(routes[0][\"type\"]),\n            stops : stopsNames,\n            timeTable: tt,\n            incorrectRoute : false,\n            returnToEditor: false,\n            confirmDelete : false,\n        }, function () {\n            console.log(\"ST: \" + this.state.startTime)\n        })\n    }\n\n    componentDidMount = () => {\n        this.GetRoute().then((routes) => {\n            if(routes.length === 0){\n                this.setState({\n                    incorrectRoute: true\n                })\n            } else {\n                this.resetValues(routes)\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n        this.GetStops().then((stops) => {\n            this.setState({\n               allStops: stops\n            }, function () {\n                console.log(\"ST: \" + this.state.startTime)\n            })\n\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetRoute() {\n        return await API.getRouteById(this.state.oldId)\n    }\n\n    async GetStops() {\n        return await API.getStops()\n    }\n\n    AddButton(){\n        return (\n            <div>\n                <TimeTableForm currentId = {this.state.number}/>\n            </div>\n        )\n    }\n\n    makeStopChoosing(id){\n        let optionsList = []\n        this.state.allStops.forEach((stop) => {\n            if(stop['stop_name'] === this.state.stops[id]){\n                optionsList.push(<option selected value = {stop['stop_name']}>{stop['stop_name']}</option>)\n            } else {\n                optionsList.push(<option value = {stop['stop_name']}>{stop['stop_name']}</option>)\n            }\n\n        })\n        return (\n            <select onChange={this.handleInputChangeArray} name={\"s\" + id} value={this.state.stops[id]}>\n                {optionsList}\n            </select>\n        )\n    }\n\n    makeTTChoosing(id){\n\n        if(id === 0){\n            return (<input onChange={this.handleInputChangeArray} min=\"0\" max = \"0\" type=\"number\" name={\"t\" + id}\n                   value={this.state.timeTable[id]}/>)\n        } else {\n            return (<input onChange={this.handleInputChangeArray} min=\"0\" type=\"number\" name={\"t\" + id}\n                   value={this.state.timeTable[id]}/>)\n        }\n\n    }\n\n    displayStationsAndTT(stops, tt){\n        let list = []\n\n        for(let i = 0; i < stops.length; i++){\n            list.push(<li>{this.makeStopChoosing(i)} --- {this.makeTTChoosing(i)}</li>)\n        }\n        return list\n    }\n\n    resetForm(){\n        console.log(\"Reset...\")\n        this.GetRoute().then((routes) => {\n            if(routes.length === 0){\n                this.setState({\n                    incorrectRoute: true\n                })\n            } else {\n               this.resetValues(routes)\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n    }\n\n    deleteElement(){\n        this.setState({\n            confirmDelete : true\n        })\n    };\n\n    confirmedDelete(){\n        API.deleteRoute(this.state.oldId, this.state)\n        this.setState({\n            returnToEditor : true\n        })\n    };\n\n    async saveChanges() {\n        if (this.state.oldId == this.state.number) {\n            let newRoute = await API.updateRoute(this.state);\n            this.state.oldId = newRoute[0][\"routeId\"]\n        } else {\n            let isAvailable = await API.checkAvailableRoute(this.state.number)\n            if (isAvailable) {\n                let newRoute = await API.updateRoute(this.state);\n                this.state.oldId = newRoute[0][\"routeId\"]\n            } else {\n                alert(\"Маршрут номер \" + this.state.number + \" вже існує!\")\n            }\n        }\n    }\n    async saveAndContinue(){\n        await this.saveChanges()\n    }\n\n    async saveAndExit(){\n        await this.saveChanges()\n        this.setState(\n            {returnToEditor : true}\n        )\n\n    }\n\n    addStop(){\n        let newStop = this.state.allStops[0].stop_name\n        let oldStops = this.state.stops.concat(newStop)\n        let newTimetable = this.state.timeTable.concat([[5.0]])\n        this.setState({\n            stops:oldStops,\n            timeTable:newTimetable\n        })\n    }\n\n    removeStop(){\n        let oldStops = this.state.stops\n        if(oldStops.length > 0){\n            oldStops.pop()\n            let newTimetable = this.state.timeTable\n            newTimetable.pop()\n            this.setState({\n                stops:oldStops,\n                timeTable:newTimetable\n            })\n        }\n    }\n\n    render(){\n        if(this.state.returnToEditor){\n            return (\n                <Redirect to={'/edit/routes'}/>\n            )\n        }\n        if(this.state.confirmDelete){\n            return (\n                <div>\n                    <NavBar fatherlink={'/edit/routes'}/>\n                    <form>\n                        <label>{\"Підтвердження видалення маршруту номер \" + this.state.oldId}</label><br/>\n                        <input type=\"button\" onClick={this.resetForm} value=\"Скасувати видалення\"/>\n                        <input type=\"button\" onClick={this.confirmedDelete} value=\"Видалити елемент\"/>\n                    </form>\n                </div>\n            )\n        }\n        if(this.state.incorrectRoute){\n            return (\n                <div>\n                    <NavBar fatherlink={'/edit/routes'}/>\n                    {this.AddButton()}\n                    <h1>Маршуруту з номером {this.state.number} не знайдено.</h1>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <NavBar fatherlink={'/edit/routes'}/>\n                <div className={styles.MainFormContainer}>\n                <form className={styles.editForm}>\n                    <label><b>{\"Редагування маршруту номер \" + this.state.number}</b></label><br/>\n                    <label>Номер маршруту: </label><input type=\"number\" className={styles.wideFromInput} value={this.state.number} name=\"number\" onChange={this.handleInputChange}/><br/>\n                    <label>Початок руху: </label><input type=\"text\" className={styles.wideFromInput} value={this.state.startTime} name=\"startTime\" onChange={this.handleInputChange}/><br/>\n                    <label>Кінець руху: </label><input type=\"text\" className={styles.wideFromInput} value={this.state.endTime} name=\"endTime\" onChange={this.handleInputChange}/><br/>\n                    <label>Інтервал: </label><input type=\"number\" className={styles.wideFromInput} value={this.state.interval} min=\"0\" name=\"interval\" onChange={this.handleInputChange}/><br/>\n                    <label>Тип маршруту: </label>\n                    <select name=\"type\" value={this.state.type} onChange={this.handleInputChange}>\n                        <option value=\"Тролейбус\">Тролейбус</option>\n                        <option value=\"Автобус\">Автобус</option>\n                        <option value=\"Трамвай\">Трамвай</option>\n                    </select>\n                    <br/>\n                    <label>Станції та розклад руху: </label>\n\n                    <ul>{this.displayStationsAndTT(this.state.stops, this.state.timeTable)}</ul>\n                    <input type=\"button\" onClick={this.addStop} value=\"+\"/>\n                    <input type=\"button\" onClick={this.removeStop} value=\"-\"/>\n                    <br/><br/>\n                    <div className={styles.AllMyButtons}>\n                    <input type=\"button\" onClick={this.resetForm} value=\"Скасувати зміни\"/>\n                    <input type=\"button\" onClick={this.deleteElement} value=\"Видалити елемент\"/>\n                    <input type=\"button\" onClick={this.saveAndContinue} value=\"Зберегти та продовжити\"/>\n                    <input type=\"button\" onClick={this.saveAndExit} value=\"Зберегти та вийти\"/>\n                    </div>\n                </form>\n                </div>\n            </div>\n\n        )\n\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}