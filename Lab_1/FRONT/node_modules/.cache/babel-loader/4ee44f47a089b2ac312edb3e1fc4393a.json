{"ast":null,"code":"var _jsxFileName = \"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/EmployeesEditor.js\";\nimport React from \"react\";\nimport * as API from \"../../API.js\";\nimport styles from \"./Editor.module.css\";\nimport { RouteObject } from \"../../models/RouteObject\";\nimport Checkbox from \"../../components/additional-components/Checkbox\";\nimport { Link } from 'react-router-dom';\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport general from \"../../styles/General.module.css\";\nimport smallList from \"../../styles/SmallList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeTypes = ['Тролейбус', 'Автобус', 'Трамвай'];\n\nclass EmployeesEditor extends React.Component {\n  async isAdmin() {\n    return await API.checkAdmin();\n  }\n\n  async GetEmployees() {\n    return await API.getEmployees();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.isAdmin().then(result => {\n        this.setState({\n          adminChecked: true,\n          isAdmin: result[\"isAdmin\"]\n        });\n      });\n      this.GetEmployees().then(employees => {\n        let newEmployees = [];\n        employees.forEach(employee => {\n          newEmployees.push( /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/edit/employee?id=\" + employee.id,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: general.listElement,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: general.listCard,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: smallList.smallP,\n                  children: [\"\\u041F\\u0440\\u0430\\u0446\\u0456\\u0432\\u043D\\u0438\\u043A(\\u0446\\u044F)  \", employee.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 109\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 75\n              }, this)\n            }, employee.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 35\n          }, this));\n        });\n        this.setState({\n          employees: newEmployees,\n          counted: true\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      stops: [],\n      routes: []\n    };\n  }\n\n  getType(number) {\n    switch (number) {\n      case 1:\n        return \"Тролейбус\";\n\n      case 2:\n        return \"Автобус\";\n\n      case 3:\n        return \"Трамвай\";\n\n      default:\n        return \"Тролейбус\";\n    }\n  } //     console.log(this.state.optionalRoutes)\n  //     console.log(this.selectedCheckboxes)\n  //      console.log(\"I choose this one: \")\n  //      console.log(this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes)))\n  //      let newDisplay = this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes))\n  //     console.log(newDisplay)\n\n\n  makeEmployeesList(newEmployees) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: general.listOfCards,\n      children: newEmployees.map(employees => employees)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this);\n  }\n  /*    return (<ul className={general.listOfCards}>\n  {\n      this.state.employees.map((employee) => <Link to={\"/employee?id=\" + employee[\"id\"]}><li key={employee[\"id\"]} >\n          <div className={general.listCard}><div className={smallList.smallP}>{employee[\"name\"]} {employee[\"surname\"]}</div></div></li></Link>)}</ul>);\n  */\n\n\n  render() {\n    if (this.state === null || !this.state.adminChecked || this.state.employees === undefined) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this);\n    } else if (!this.state.isAdmin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this);\n    } else {\n      let list = this.makeEmployeesList(this.state.employees);\n\n      if (this.state.counted) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            fatherlink: '/editor'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: general.MainBodyContainer,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/add/employee\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u0440\\u0430\\u0446\\u0456\\u0432\\u043D\\u0438\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.container,\n              children: list\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            fatherlink: '/editor'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: general.MainBodyContainer,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/add/employee\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u0440\\u0430\\u0446\\u0456\\u0432\\u043D\\u0438\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.container\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n\n}\n\nexport default EmployeesEditor;","map":{"version":3,"sources":["/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/EmployeesEditor.js"],"names":["React","API","styles","RouteObject","Checkbox","Link","NavBar","Loading","Redirect","general","smallList","routeTypes","EmployeesEditor","Component","isAdmin","checkAdmin","GetEmployees","getEmployees","constructor","props","componentDidMount","then","result","setState","adminChecked","employees","newEmployees","forEach","employee","push","id","listElement","listCard","smallP","name","counted","catch","error","console","log","state","stops","routes","getType","number","makeEmployeesList","listOfCards","map","render","undefined","list","MainBodyContainer","container"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as API from \"../../API.js\"\nimport styles from \"./Editor.module.css\"\nimport {RouteObject} from \"../../models/RouteObject\"\nimport Checkbox from \"../../components/additional-components/Checkbox\";\nimport { Link } from 'react-router-dom'\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport general from \"../../styles/General.module.css\";\nimport smallList from \"../../styles/SmallList.module.css\";\n\n\nconst routeTypes = [\n    'Тролейбус',\n    'Автобус',\n    'Трамвай',\n];\n\nclass EmployeesEditor extends React.Component {\n\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked : true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n        this.GetEmployees().then((employees) => {\n            let newEmployees = []\n            employees.forEach((employee) => {\n                newEmployees.push(<Link to={\"/edit/employee?id=\" + employee.id}>\n                    <li key={employee.id} className={general.listElement}><div className={general.listCard}><div className={smallList.smallP}>Працівник(ця)  {employee.name}</div></div></li>\n                </Link>)\n            })\n\n\n            this.setState({\n                employees : newEmployees,\n                counted : true,\n            })\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetEmployees() {\n        return await API.getEmployees()\n    }\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            stops: [],\n            routes: []\n        }\n    }\n\n    getType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n        //     console.log(this.state.optionalRoutes)\n        //     console.log(this.selectedCheckboxes)\n        //      console.log(\"I choose this one: \")\n        //      console.log(this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes)))\n        //      let newDisplay = this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes))\n        //     console.log(newDisplay)\n\n\n    makeEmployeesList(newEmployees){\n        return (<ul className={general.listOfCards}>{newEmployees.map((employees) => employees)}</ul>)\n    }\n\n/*    return (<ul className={general.listOfCards}>\n{\n    this.state.employees.map((employee) => <Link to={\"/employee?id=\" + employee[\"id\"]}><li key={employee[\"id\"]} >\n        <div className={general.listCard}><div className={smallList.smallP}>{employee[\"name\"]} {employee[\"surname\"]}</div></div></li></Link>)}</ul>);\n*/\n\n    render() {\n        if(this.state === null || !this.state.adminChecked || this.state.employees === undefined){\n            return (\n                <Loading/>\n            );\n        } else if(!this.state.isAdmin){\n            return (<Redirect to={'/'}/>)\n        } else {\n            let list = this.makeEmployeesList(this.state.employees)\n            if (this.state.counted) {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <div className={general.MainBodyContainer}>\n                            <Link to={\"/add/employee\"}>\n                                <button>Додати нового працівника</button>\n                            </Link>\n                            <div className={styles.container}>\n                                {list}\n                            </div>\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <div className={general.MainBodyContainer}>\n                            <Link to={\"/add/employee\"}>\n                                <button>Додати нового працівника</button>\n                            </Link>\n                            <div className={styles.container}/>\n                        </div>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default EmployeesEditor;"]},"metadata":{},"sourceType":"module"}