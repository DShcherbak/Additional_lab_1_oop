{"ast":null,"code":"var _jsxFileName = \"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/EmployeeObject.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as API from \"../API\";\nimport { withRouter } from 'react-router-dom';\nimport TimeTableForm from \"../components/additional-components/TimeTableForm\";\nimport NavBar from \"../components/nav-bar\";\nimport Loading from \"../components/loading\";\nimport styles from \"../styles/General.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class EmployeeObject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      let number = this.getRouteId(window.location.href);\n      console.log(\"Employee number \" + number);\n      this.GetEmployee(number).then(employees => {\n        if (employees.length === 0) {\n          this.setState({\n            incorrectRoute: true,\n            counted: true\n          });\n        } else {\n          let routeId = employees[0][\"route_number\"];\n          console.log(\"Route number \" + routeId);\n          this.GetRoute(routeId).then(route => {\n            console.log(route);\n\n            if (route === undefined) {\n              this.setState({\n                incorrectRoute: true,\n                counted: true\n              });\n            } else {\n              this.setState({\n                id: employees[0][\"id\"],\n                name: employees[0][\"name\"],\n                surname: employees[0][\"surname\"],\n                routeId: employees[0][\"route_id\"],\n                routeType: this.GetType(route[\"type\"]),\n                routeNumber: route[\"routeId\"],\n                counted: true\n              }, function () {\n                console.log(\"ST: \" + this.state.startTime);\n              });\n            }\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      counted: false\n    };\n  }\n\n  getRouteId(url) {\n    let id = url.lastIndexOf('=');\n    let numberStr = url.substring(id + 1);\n    return parseInt(numberStr);\n  }\n\n  GetType(number) {\n    switch (number) {\n      case 1:\n        return \"Тролейбус\";\n\n      case 2:\n        return \"Автобус\";\n\n      case 3:\n        return \"Трамвай\";\n\n      default:\n        return \"Тролейбус\";\n    }\n  }\n\n  async GetEmployee(number) {\n    return await API.getEmployee(number);\n  }\n\n  async GetRoute(id) {\n    let routes = await API.getRoutes();\n    console.log(\"All the routes: \" + routes);\n    let n = routes.length;\n\n    for (let i = 0; i < n; i++) {\n      console.log(\"X: \" + routes[i][\"routeId\"]);\n\n      if (routes[i][\"routeId\"] === id) {\n        return routes[i];\n      }\n    }\n\n    return undefined;\n  }\n\n  render() {\n    if (this.state === undefined || this.state.counted === false) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.incorrectRoute) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041F\\u0440\\u0430\\u0446\\u0456\\u0432\\u043D\\u0438\\u043A\\u0430 \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        fatherlink: '/employees'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MainBodyContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0406\\u043C'\\u044F:  \", this.state.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435:  \", this.state.surname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442: \", this.state.routeType, \" \\u043D\\u043E\\u043C\\u0435\\u0440 \", this.state.routeNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/models/EmployeeObject.js"],"names":["React","Redirect","API","withRouter","TimeTableForm","NavBar","Loading","styles","EmployeeObject","Component","constructor","props","componentDidMount","number","getRouteId","window","location","href","console","log","GetEmployee","then","employees","length","setState","incorrectRoute","counted","routeId","GetRoute","route","undefined","id","name","surname","routeType","GetType","routeNumber","state","startTime","catch","error","url","lastIndexOf","numberStr","substring","parseInt","getEmployee","routes","getRoutes","n","i","render","MainBodyContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport * as API from \"../API\";\nimport { withRouter } from 'react-router-dom';\nimport TimeTableForm from \"../components/additional-components/TimeTableForm\";\nimport NavBar from \"../components/nav-bar\";\nimport Loading from \"../components/loading\";\nimport styles from \"../styles/General.module.css\"\n\n\n\nexport class EmployeeObject extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            counted: false\n        }\n    }\n\n\n    getRouteId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    componentDidMount = () => {\n        let number = this.getRouteId(window.location.href)\n        console.log(\"Employee number \" + number)\n        this.GetEmployee(number).then((employees) => {\n            if(employees.length === 0){\n                this.setState({\n                    incorrectRoute: true,\n                    counted: true\n                })\n            } else {\n                let routeId = employees[0][\"route_number\"]\n                console.log(\"Route number \" + routeId)\n                this.GetRoute(routeId).then((route) => {\n                    console.log(route)\n                    if(route === undefined){\n                        this.setState({\n                            incorrectRoute: true,\n                            counted: true\n                        })\n                    } else {\n                        this.setState({\n                            id: employees[0][\"id\"],\n                            name: employees[0][\"name\"],\n                            surname: employees[0][\"surname\"],\n                            routeId: employees[0][\"route_id\"],\n                            routeType : this.GetType(route[\"type\"]),\n                            routeNumber : route[\"routeId\"],\n                            counted : true\n                        }, function () {\n                            console.log(\"ST: \" + this.state.startTime)\n                        })\n                    }\n                })\n\n            }\n\n        }).catch((error) => {\n            console.log(error);\n        });\n\n    }\n\n    GetType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n\n    async GetEmployee(number) {\n        return await API.getEmployee(number)\n    }\n\n    async GetRoute(id){\n\n        let routes = await API.getRoutes()\n        console.log(\"All the routes: \" + routes)\n        let n = routes.length\n        for(let i = 0; i < n; i++){\n            console.log(\"X: \" + routes[i][\"routeId\"])\n            if(routes[i][\"routeId\"] === id){\n                return routes[i]\n            }\n        }\n        return undefined\n    }\n\n    render(){\n\n        if(this.state === undefined || this.state.counted === false){\n            return <Loading/>\n        }\n\n        if(this.state.incorrectRoute){\n            return (\n                <div>\n                    <h1>Працівника не знайдено.</h1>\n                </div>\n            )\n        }\n\n\n        return (\n            <div>\n                <NavBar fatherlink={'/employees'}/>\n                <div className={styles.MainBodyContainer}>\n                    <p>Ім'я:  {this.state.name}</p>\n                    <p>Прізвище:  {this.state.surname}</p>\n                    <p>Транспорт: {this.state.routeType} номер {this.state.routeNumber}</p>\n                </div>\n\n            </div>\n        )\n\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}