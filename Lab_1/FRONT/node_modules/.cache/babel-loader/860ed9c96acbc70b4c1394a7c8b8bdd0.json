{"ast":null,"code":"var _jsxFileName = \"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/StopsEditor.js\";\nimport React from \"react\";\nimport * as API from \"../../API.js\";\nimport { RouteObject } from \"../../models/RouteObject\";\nimport Checkbox from \"../../components/additional-components/Checkbox\";\nimport { Link } from 'react-router-dom';\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport styles from \"../../styles/General.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeTypes = ['Тролейбус', 'Автобус', 'Трамвай'];\n\nclass StopsEditor extends React.Component {\n  async isAdmin() {\n    return await API.checkAdmin();\n  }\n\n  async GetStops() {\n    return await API.getStops();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.isAdmin().then(result => {\n        this.setState({\n          adminChecked: true,\n          isAdmin: result[\"isAdmin\"]\n        });\n      });\n      this.GetStops().then(stops => {\n        let newStops = [];\n        stops.forEach(stop => {\n          newStops.push( /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/edit/stop?stopId=\" + stop.stop_id,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u0421\\u0442\\u0430\\u043D\\u0446\\u0456\\u044F \", stop.stop_name]\n            }, stop.stop_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 31\n          }, this));\n        });\n        this.setState({\n          stops: newStops,\n          counted: true\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      stops: [],\n      routes: []\n    };\n  }\n\n  getType(number) {\n    switch (number) {\n      case 1:\n        return \"Тролейбус\";\n\n      case 2:\n        return \"Автобус\";\n\n      case 3:\n        return \"Трамвай\";\n\n      default:\n        return \"Тролейбус\";\n    }\n  } //     console.log(this.state.optionalRoutes)\n  //     console.log(this.selectedCheckboxes)\n  //      console.log(\"I choose this one: \")\n  //      console.log(this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes)))\n  //      let newDisplay = this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes))\n  //     console.log(newDisplay)\n\n\n  makeStopList(stops) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stops.map(stop => stop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    if (this.state === null || !this.state.adminChecked) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    } else if (!this.state.isAdmin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this);\n    } else {\n      let list = this.makeStopList(this.state.stops);\n\n      if (this.state.counted) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            fatherlink: '/editor'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add/stop\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043D\\u043E\\u0432\\u0443 \\u0437\\u0443\\u043F\\u0438\\u043D\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.container,\n            children: list\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            fatherlink: '/editor'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add/stop\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043D\\u043E\\u0432\\u0443 \\u0437\\u0443\\u043F\\u0438\\u043D\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.container\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n\n}\n\nexport default StopsEditor;","map":{"version":3,"sources":["/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Editor/StopsEditor.js"],"names":["React","API","RouteObject","Checkbox","Link","NavBar","Loading","Redirect","styles","routeTypes","StopsEditor","Component","isAdmin","checkAdmin","GetStops","getStops","constructor","props","componentDidMount","then","result","setState","adminChecked","stops","newStops","forEach","stop","push","stop_id","stop_name","counted","catch","error","console","log","state","routes","getType","number","makeStopList","map","render","list","container"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as API from \"../../API.js\"\nimport {RouteObject} from \"../../models/RouteObject\"\nimport Checkbox from \"../../components/additional-components/Checkbox\";\nimport { Link } from 'react-router-dom'\nimport NavBar from \"../../components/nav-bar\";\nimport Loading from \"../../components/loading\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport styles from \"../../styles/General.module.css\"\n\nconst routeTypes = [\n    'Тролейбус',\n    'Автобус',\n    'Трамвай',\n];\n\nclass StopsEditor extends React.Component {\n\n    async isAdmin(){\n        return await API.checkAdmin()\n    }\n\n    componentDidMount = () => {\n        this.isAdmin().then(result => {\n            this.setState({\n                adminChecked : true,\n                isAdmin: result[\"isAdmin\"]\n            })\n        })\n        this.GetStops().then((stops) => {\n            let newStops = []\n            stops.forEach((stop) => {\n                newStops.push(<Link to={\"/edit/stop?stopId=\" + stop.stop_id}>\n                    <li key={stop.stop_id}>Станція {stop.stop_name}</li>\n                </Link>)\n            })\n\n\n            this.setState({\n                stops : newStops,\n                counted : true,\n            })\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetStops() {\n        return await API.getStops()\n    }\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            stops: [],\n            routes: []\n        }\n    }\n\n    getType(number){\n        switch (number) {\n            case 1:\n                return \"Тролейбус\";\n            case 2:\n                return \"Автобус\";\n            case 3:\n                return \"Трамвай\";\n            default:\n                return \"Тролейбус\";\n        }\n    }\n        //     console.log(this.state.optionalRoutes)\n        //     console.log(this.selectedCheckboxes)\n        //      console.log(\"I choose this one: \")\n        //      console.log(this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes)))\n        //      let newDisplay = this.state.optionalRoutes.get(this.getSubsetNumber(this.selectedCheckboxes))\n        //     console.log(newDisplay)\n\n\n    makeStopList(stops){\n        return (<ul>{stops.map((stop) => stop)}</ul>)\n    }\n\n\n    render() {\n        if(this.state === null || !this.state.adminChecked){\n            return (\n                <Loading/>\n            );\n        } else if(!this.state.isAdmin){\n            return (<Redirect to={'/'}/>)\n        } else {\n            let list = this.makeStopList(this.state.stops)\n            if (this.state.counted) {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <Link to={\"/add/stop\"}>\n                            <button>Додати нову зупинку</button>\n                        </Link>\n                        <div className={styles.container}>\n                            {list}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <NavBar fatherlink={'/editor'}/>\n                        <Link to={\"/add/stop\"}>\n                            <button>Додати нову зупинку</button>\n                        </Link>\n                        <div className={styles.container}/>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default StopsEditor;"]},"metadata":{},"sourceType":"module"}