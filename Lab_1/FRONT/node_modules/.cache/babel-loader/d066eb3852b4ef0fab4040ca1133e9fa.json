{"ast":null,"code":"var _jsxFileName = \"/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Employees/Employees.js\";\nimport React from \"react\"; //import * as API from  \"API.js\"\n\n/* We simply can use an array and loop and print each user */\n\nimport { TimeTableObject } from \"../../models/TimeTableObject\";\nimport { Link, Redirect } from 'react-router-dom';\nimport NavBar from \"../../components/nav-bar\";\nimport * as API from \"../../API\";\nimport general from \"../../styles/General.module.css\";\nimport styles from \"../../styles/Routes.module.css\";\nimport smallList from \"../../styles/SmallList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class GeneralEmployees extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.GetEmployees().then(employees => {\n        this.setState({\n          employees: employees,\n          counted: true\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    let id = this.getEmployeeId(window.location.href);\n    this.state = {\n      employeeId: id\n    };\n  }\n\n  async GetEmployees() {\n    return await API.getEmployees();\n  }\n\n  getEmployeeId(url) {\n    let id = url.lastIndexOf('=');\n    let numberStr = url.substring(id + 1);\n    return parseInt(numberStr);\n  }\n\n  makeEmployeesList() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: general.listOfCards,\n      children: this.state.employees.map(employee => /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/employee?id=\" + employee[\"id\"],\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: general.listElement,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: general.listCard,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: smallList.smallP,\n              children: [employee[\"name\"], \" \", employee[\"surname\"]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, employee[\"id\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 100\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 56\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    if (this.state !== undefined && this.state.counted) {\n      let list = this.makeEmployeesList();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          fatherlink: '/'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: general.MainBodyContainer,\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          fatherlink: '/'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: general.MainBodyContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No employees here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/sadoffnick/Desktop/University_Labs-782d16d9e93f5f21f9b7569cd8b73d90f641c7f6/semester_6/Object-oriented_programming/Labs/Lab_1/FRONT/src/pages/Employees/Employees.js"],"names":["React","TimeTableObject","Link","Redirect","NavBar","API","general","styles","smallList","GeneralEmployees","Component","constructor","props","componentDidMount","GetEmployees","then","employees","setState","counted","catch","error","console","log","id","getEmployeeId","window","location","href","state","employeeId","getEmployees","url","lastIndexOf","numberStr","substring","parseInt","makeEmployeesList","listOfCards","map","employee","listElement","listCard","smallP","render","undefined","list","MainBodyContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import * as API from  \"API.js\"\n/* We simply can use an array and loop and print each user */\nimport {TimeTableObject} from \"../../models/TimeTableObject\";\nimport {Link, Redirect} from 'react-router-dom'\nimport NavBar from \"../../components/nav-bar\";\nimport * as API from \"../../API\";\nimport general from \"../../styles/General.module.css\"\nimport styles from \"../../styles/Routes.module.css\"\nimport smallList from \"../../styles/SmallList.module.css\"\n\nexport class GeneralEmployees extends React.Component{\n\n    constructor(props) {\n        super(props);\n        let id = this.getEmployeeId(window.location.href)\n        this.state = {\n            employeeId : id\n        }\n    }\n\n    componentDidMount = () => {\n        this.GetEmployees().then((employees) => {\n            this.setState({\n                employees : employees,\n                counted: true\n            })\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    async GetEmployees() {\n        return await API.getEmployees()\n    }\n\n    getEmployeeId(url){\n        let id = url.lastIndexOf('=')\n        let numberStr = url.substring(id + 1)\n        return parseInt(numberStr)\n    }\n\n    makeEmployeesList(){\n        return (<ul className={general.listOfCards}>\n            {\n                this.state.employees.map((employee) => <Link to={\"/employee?id=\" + employee[\"id\"]}><li key={employee[\"id\"]} className={general.listElement}>\n            <div className={general.listCard}><div className={smallList.smallP}>{employee[\"name\"]} {employee[\"surname\"]}</div></div></li></Link>)}</ul>);\n    }\n\n    render() {\n        if(this.state !== undefined && this.state.counted){\n            let list = this.makeEmployeesList()\n            return (\n                <div>\n                    <NavBar fatherlink={'/'}/>\n                    <div className={general.MainBodyContainer}>\n                        {list}\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <NavBar fatherlink={'/'}/>\n                    <div className={general.MainBodyContainer}>\n                        <div>No employees here</div>\n                    </div>\n                </div>\n            );\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}